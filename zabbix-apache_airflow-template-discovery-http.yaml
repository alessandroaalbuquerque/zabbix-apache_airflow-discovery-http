zabbix_export:
  version: '6.2'
  date: '2024-01-20T18:16:32Z'
  template_groups:
    -
      uuid: a571c0d144b14fd4a87a9d9b2aa9fcd6
      name: Templates/Applications
  templates:
    -
      uuid: f5989ba8c32b4b46942c305be6ac1b31
      template: 'AirFlow by HTTP'
      name: 'AirFlow by HTTP'
      groups:
        -
          name: Templates/Applications
      discovery_rules:
        -
          uuid: e9983cd1ff1649af8bf6f2a814abfc55
          name: 'GET List DAGs IDs'
          type: HTTP_AGENT
          key: aiflow_get_list_DAGs_DAGIDs
          delay: '0;10m/1-7,01:00-01:30'
          item_prototypes:
            -
              uuid: 0b22de0f0ecd46cd958b830ec87c7b8b
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun'
              type: DEPENDENT
              key: 'aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              description: 'Coleta a última dagRun da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.dag_runs[0]'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
              master_item:
                key: 'aiflow-DAG-dagRuns-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: f77981ddce32418396ddcd221cc1d6e2
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun state number'
              type: DEPENDENT
              key: 'aiflow-DAG-dagRuns-[{#DAG_ID}-number-lastdagRun-state]'
              delay: '0'
              description: |
                Coleta o state da última dagRun da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] e transforma em numérico:
                
                0 Failed
                1 Deferred
                2 Queued
                3 Removed
                4 Restarting
                5 Running
                6 Scheduled
                7 Sensing
                8 Shutdown
                9 Skipped
                10 Up for reschedule
                11 Up for retry
                12 Upstream failed
                13 Success
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.dag_runs[0].state'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
                -
                  type: TRIM
                  parameters:
                    - '["]'
                -
                  type: STR_REPLACE
                  parameters:
                    - failed
                    - '00'
                -
                  type: STR_REPLACE
                  parameters:
                    - deferred
                    - '01'
                -
                  type: STR_REPLACE
                  parameters:
                    - queued
                    - '02'
                -
                  type: STR_REPLACE
                  parameters:
                    - removed
                    - '03'
                -
                  type: STR_REPLACE
                  parameters:
                    - restarting
                    - '04'
                -
                  type: STR_REPLACE
                  parameters:
                    - running
                    - '05'
                -
                  type: STR_REPLACE
                  parameters:
                    - scheduled
                    - '06'
                -
                  type: STR_REPLACE
                  parameters:
                    - sensing
                    - '07'
                -
                  type: STR_REPLACE
                  parameters:
                    - shutdown
                    - '08'
                -
                  type: STR_REPLACE
                  parameters:
                    - skipped
                    - '09'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'up for reschedule'
                    - '10'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'up for retry'
                    - '11'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'upstream failed'
                    - '12'
                -
                  type: STR_REPLACE
                  parameters:
                    - success
                    - '13'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'no entries'
                    - '14'
              master_item:
                key: 'aiflow-DAG-dagRuns-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun state number'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: cfc15b7134ef46d9a80cfb11f804fb1b
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [slamiss] dagRuns Task Instances'
              type: DEPENDENT
              key: 'aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances-slamiss]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              description: 'Coleta informações de SLAMISS da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $..sla_miss
                  error_handler: CUSTOM_VALUE
                  error_handler_params: ok
                -
                  type: STR_REPLACE
                  parameters:
                    - 'null,'
                    - ''
                -
                  type: STR_REPLACE
                  parameters:
                    - ',null'
                    - ''
                -
                  type: STR_REPLACE
                  parameters:
                    - '"description": '
                    - ''
                -
                  type: JSONPATH
                  parameters:
                    - $..task_id
                  error_handler: CUSTOM_VALUE
                  error_handler_params: ok
              master_item:
                key: 'aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances]'
              tags:
                -
                  tag: airflow
                  value: '[slamiss] dagRuns Task Instances'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: c761ecf647e34c56af1cc2536950383c
                  expression: 'last(/AirFlow by HTTP/aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances-slamiss])<>"ok"'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [slamiss] dagRuns Last Task Instances'
                  opdata: '{ITEM.LASTVALUE}'
                  priority: WARNING
                  description: |
                    Indica que a última Task Instance da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] houve SLA MISS.
                    
                    URL Airflow:
                    https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
                  tags:
                    -
                      tag: airflow
                      value: '[slamiss] dagRuns Last Task Instances'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: a9d6ebad7ffa4437b6b34c07463eb481
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagRuns Task Instances'
              type: HTTP_AGENT
              key: 'aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances]'
              delay: 30m
              trends: '0'
              value_type: TEXT
              description: 'Coleta as as Tasks Instances da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.task_instances
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
                -
                  type: STR_REPLACE
                  parameters:
                    - '[]'
                    - 'no entries'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/dagRuns/~/taskInstances'
              query_fields:
                -
                  name: limit
                  value: '100'
                -
                  name: execution_date_gte
                  value: '{$DATEBUCKET}'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: 'dagRuns Task Instances'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 1d5995e0844a4e4692bcd54f8c97c0ad
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagRuns'
              type: HTTP_AGENT
              key: 'aiflow-DAG-dagRuns-[{#DAG_ID}]'
              delay: 30m
              trends: '0'
              value_type: TEXT
              description: |
                Coleta informações das dagRuns da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]
                
                https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/dagRuns'
              query_fields:
                -
                  name: order_by
                  value: '-dag_run_id'
                -
                  name: limit
                  value: '10'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airlfow
                  value: dagRuns
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 99d9feb645b94c3b9527621cf69dc240
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagSources'
              type: HTTP_AGENT
              key: 'aiflow-DAG-dagSources-[{#DAG_ID}]'
              delay: '0;1m/1-7,03:31-03:32'
              trends: '0'
              value_type: TEXT
              description: 'Coleta o dagSources da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dagSources/{{#FILE_TOKEN}.regsub("\[\"(.*)\"\]", \1)}'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: dagSources
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: bbbeaa9943934186940fbb0822e1c9da
                  expression: 'change(/AirFlow by HTTP/aiflow-DAG-dagSources-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in dagSources'
                  opdata: '{ITEM.LASTVALUE}'
                  priority: INFO
                  description: 'Indica que houve alteração na CODE da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Change in dagSources'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 37403fa87d1c4d0793f677fead17ffe0
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [state] Details number'
              type: DEPENDENT
              key: 'aiflow-DAG-details-state-[{#DAG_ID}]'
              delay: '0'
              description: 'Coleta informações de STATE IS da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.is_paused
                -
                  type: STR_REPLACE
                  parameters:
                    - 'true'
                    - '1'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'false'
                    - '0'
                -
                  type: TRIM
                  parameters:
                    - '[]'
              master_item:
                key: 'aiflow-DAG-details-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: '[state] Details'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: abb6950be29249caaf1d90694eefe9f5
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Details'
              type: HTTP_AGENT
              key: 'aiflow-DAG-details-[{#DAG_ID}]'
              delay: '0;1m/1-7,01:31-01:32'
              trends: '0'
              value_type: TEXT
              description: 'Coleta os detalhes da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/details'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: Details
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: dc8a649b4b2449d7b4adf5993db3b9d7
                  expression: 'change(/AirFlow by HTTP/aiflow-DAG-details-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in Details'
                  opdata: '{ITEM.LASTVALUE}'
                  status: DISABLED
                  discover: NO_DISCOVER
                  priority: INFO
                  description: 'Indica que houve alteração nas configurações da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Alteração em Details'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 2647ea9f76e04451a819d8ff8ff0864f
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] All Tasks ID'
              type: DEPENDENT
              key: 'aiflow-DAG-tasks-[{#DAG_ID}-all-tasks_id]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              description: 'Coleta todas as Tasks_id da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.tasks[*].task_id'
              master_item:
                key: 'aiflow-DAG-tasks-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'All Tasks ID'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: cc15f8b5278b444a91a6a7f9676d9353
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Tasks'
              type: HTTP_AGENT
              key: 'aiflow-DAG-tasks-[{#DAG_ID}]'
              delay: '0;1m/1-7,02:30-02:31'
              trends: '0'
              value_type: TEXT
              description: 'Coleta informações das Tasks da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/tasks'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: Tasks
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: 3ffba57448d8476fb877363a74d293c7
                  expression: 'change(/AirFlow by HTTP/aiflow-DAG-tasks-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in Task'
                  opdata: '{ITEM.LASTVALUE}'
                  status: DISABLED
                  discover: NO_DISCOVER
                  priority: INFO
                  description: 'Indica que houve alteração nas configurações das TASKs da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Alteração em Details'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
          trigger_prototypes:
            -
              uuid: 2d4c54d77d5e4b049e1e98cea87244f9
              expression: '(last(/AirFlow by HTTP/aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state])=00 or last(/AirFlow by HTTP/aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state])=0) and last(/AirFlow by HTTP/aiflow-DAG-details-state-[{#DAG_ID}])=1'
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun fail'
              opdata: '{ITEM.LASTVALUE}'
              priority: WARNING
              description: |
                Indica que a última execução da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] houve falha.
                
                URL Airflow:
                https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun fail'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                -
                  tag: team
                  value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
          timeout: 5s
          url: '{$URL_DAGS_LIST}/dags'
          query_fields:
            -
              name: limit
              value: '300'
            -
              name: only_active
              value: 'false'
          headers:
            -
              name: Authorization
              value: 'Bearer {$TOKEN}'
          lld_macro_paths:
            -
              lld_macro: '{#DAG_ID}'
              path: $..dag_id
            -
              lld_macro: '{#FILE_TOKEN}'
              path: $..file_token
            -
              lld_macro: '{#OWNER}'
              path: '$..owners[0]'
            -
              lld_macro: '{#SCHEDULE}'
              path: $..schedule_interval.value
            -
              lld_macro: '{#TAG}'
              path: '$..tags[0].name'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.dags
        -
          uuid: e538836ea8624d6696622826611444cd
          name: 'GET List DAGs IDs +'
          type: HTTP_AGENT
          key: offset100_aiflow_get_list_DAGs_DAGIDs
          delay: '0;10m/1-7,01:00-01:30'
          item_prototypes:
            -
              uuid: a644fbe62a3f49e2ba2da56e34e65798
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun'
              type: DEPENDENT
              key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.dag_runs[0]'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
              master_item:
                key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: e8db25421cbb4c1dab2eb16436a79081
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun state number'
              type: DEPENDENT
              key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-number-lastdagRun-state]'
              delay: '0'
              description: |
                Coleta o state da última dagRun da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] e transforma em numérico:
                
                0 Failed
                1 Deferred
                2 Queued
                3 Removed
                4 Restarting
                5 Running
                6 Scheduled
                7 Sensing
                8 Shutdown
                9 Skipped
                10 Up for reschedule
                11 Up for retry
                12 Upstream failed
                13 Success
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.dag_runs[0].state'
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
                -
                  type: TRIM
                  parameters:
                    - '["]'
                -
                  type: STR_REPLACE
                  parameters:
                    - failed
                    - '00'
                -
                  type: STR_REPLACE
                  parameters:
                    - deferred
                    - '01'
                -
                  type: STR_REPLACE
                  parameters:
                    - queued
                    - '02'
                -
                  type: STR_REPLACE
                  parameters:
                    - removed
                    - '03'
                -
                  type: STR_REPLACE
                  parameters:
                    - restarting
                    - '04'
                -
                  type: STR_REPLACE
                  parameters:
                    - running
                    - '05'
                -
                  type: STR_REPLACE
                  parameters:
                    - scheduled
                    - '06'
                -
                  type: STR_REPLACE
                  parameters:
                    - sensing
                    - '07'
                -
                  type: STR_REPLACE
                  parameters:
                    - shutdown
                    - '08'
                -
                  type: STR_REPLACE
                  parameters:
                    - skipped
                    - '09'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'up for reschedule'
                    - '10'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'up for retry'
                    - '11'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'upstream failed'
                    - '12'
                -
                  type: STR_REPLACE
                  parameters:
                    - success
                    - '13'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'no entries'
                    - '14'
              master_item:
                key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun state number'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: e6238e3134ea4e7d8e9c73dfd4349866
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [slamiss] dagRuns Task Instances'
              type: DEPENDENT
              key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances-slamiss]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              description: 'Coleta informações de SLAMISS da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $..sla_miss
                  error_handler: CUSTOM_VALUE
                  error_handler_params: ok
                -
                  type: STR_REPLACE
                  parameters:
                    - 'null,'
                    - ''
                -
                  type: STR_REPLACE
                  parameters:
                    - ',null'
                    - ''
                -
                  type: STR_REPLACE
                  parameters:
                    - '"description": '
                    - ''
                -
                  type: JSONPATH
                  parameters:
                    - $..task_id
                  error_handler: CUSTOM_VALUE
                  error_handler_params: ok
              master_item:
                key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances]'
              tags:
                -
                  tag: airflow
                  value: '[slamiss] dagRuns Task Instances'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: d3ed2de2a8064ed59397dfde475191ca
                  expression: 'last(/AirFlow by HTTP/offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances-slamiss])<>"ok"'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [slamiss] dagRuns Last Task Instances'
                  opdata: '{ITEM.LASTVALUE}'
                  priority: WARNING
                  description: |
                    Indica que a última Task Instance da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] houve SLA MISS.
                    
                    URL Airflow:
                    https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
                  tags:
                    -
                      tag: airflow
                      value: '[slamiss] dagRuns Last Task Instances'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: fc84b7e5bb534e0086ef9376390ce01b
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagRuns Task Instances'
              type: HTTP_AGENT
              key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-TasksInstances]'
              delay: 30m
              trends: '0'
              value_type: TEXT
              description: 'Coleta as as Tasks Instances da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.task_instances
                  error_handler: CUSTOM_VALUE
                  error_handler_params: 'no entries'
                -
                  type: STR_REPLACE
                  parameters:
                    - '[]'
                    - 'no entries'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/dagRuns/~/taskInstances'
              query_fields:
                -
                  name: limit
                  value: '100'
                -
                  name: execution_date_gte
                  value: '{$DATEBUCKET}'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: 'dagRuns Task Instances'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: c277bba45bfa44fca63391cf4d77a1c1
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagRuns'
              type: HTTP_AGENT
              key: 'offset100-aiflow-DAG-dagRuns-[{#DAG_ID}]'
              delay: 30m
              trends: '0'
              value_type: TEXT
              description: |
                Coleta informações das dagRuns da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]
                
                https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/dagRuns'
              query_fields:
                -
                  name: order_by
                  value: '-dag_run_id'
                -
                  name: limit
                  value: '10'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airlfow
                  value: dagRuns
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 5a8e862f90974270941b5819273accf4
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] dagSources'
              type: HTTP_AGENT
              key: 'offset100-aiflow-DAG-dagSources-[{#DAG_ID}]'
              delay: '0;1m/1-7,03:31-03:32'
              trends: '0'
              value_type: TEXT
              description: 'Coleta o dagSources da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dagSources/{{#FILE_TOKEN}.regsub("\[\"(.*)\"\]", \1)}'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: dagSources
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: 8e1b4ed0cfa84f01885e9dcfe136b135
                  expression: 'change(/AirFlow by HTTP/offset100-aiflow-DAG-dagSources-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in dagSources'
                  opdata: '{ITEM.LASTVALUE}'
                  priority: INFO
                  description: 'Indica que houve alteração na CODE da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Change in dagSources'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 0339d0cb881d49b18414dad0ffff5c06
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] [state] Details number'
              type: DEPENDENT
              key: 'offset100-aiflow-DAG-details-state-[{#DAG_ID}]'
              delay: '0'
              description: 'Coleta informações de STATE IS da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - $.is_paused
                -
                  type: STR_REPLACE
                  parameters:
                    - 'true'
                    - '1'
                -
                  type: STR_REPLACE
                  parameters:
                    - 'false'
                    - '0'
                -
                  type: TRIM
                  parameters:
                    - '[]'
              master_item:
                key: 'offset100-aiflow-DAG-details-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: '[state] Details'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: d70d8e3629984b2385ae396d0b1a2ddf
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Details'
              type: HTTP_AGENT
              key: 'offset100-aiflow-DAG-details-[{#DAG_ID}]'
              delay: '0;1m/1-7,01:31-01:32'
              trends: '0'
              value_type: TEXT
              description: 'Coleta os detalhes da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/details'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: Details
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: d6490181d6f649fa863dd34ff4bcb8b5
                  expression: 'change(/AirFlow by HTTP/offset100-aiflow-DAG-details-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in Details'
                  opdata: '{ITEM.LASTVALUE}'
                  status: DISABLED
                  discover: NO_DISCOVER
                  priority: INFO
                  description: 'Indica que houve alteração nas configurações da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Alteração em Details'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: 3d7cd37c1639481a8dd9e5021fa6be38
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] All Tasks ID'
              type: DEPENDENT
              key: 'offset100-aiflow-DAG-tasks-[{#DAG_ID}-all-tasks_id]'
              delay: '0'
              trends: '0'
              value_type: TEXT
              description: 'Coleta todas as Tasks_id da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.tasks[*].task_id'
              master_item:
                key: 'offset100-aiflow-DAG-tasks-[{#DAG_ID}]'
              tags:
                -
                  tag: airflow
                  value: 'All Tasks ID'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
            -
              uuid: cb0a9278c015442b97050936cae4fc2e
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Tasks'
              type: HTTP_AGENT
              key: 'offset100-aiflow-DAG-tasks-[{#DAG_ID}]'
              delay: '0;1m/1-7,02:30-02:31'
              trends: '0'
              value_type: TEXT
              description: 'Coleta informações das Tasks da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
              url: '{$URL_DAGS_LIST}/dags/{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}/tasks'
              headers:
                -
                  name: Authorization
                  value: 'Bearer {$TOKEN}'
              tags:
                -
                  tag: airflow
                  value: Tasks
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
              trigger_prototypes:
                -
                  uuid: 85d4a123fc754fcd8c72814ac984e3ee
                  expression: 'change(/AirFlow by HTTP/offset100-aiflow-DAG-tasks-[{#DAG_ID}])=1'
                  name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Change in Task'
                  opdata: '{ITEM.LASTVALUE}'
                  status: DISABLED
                  discover: NO_DISCOVER
                  priority: INFO
                  description: 'Indica que houve alteração nas configurações das TASKs da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}]'
                  tags:
                    -
                      tag: airflow
                      value: 'Alteração em Details'
                    -
                      tag: DAG
                      value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                    -
                      tag: team
                      value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
          trigger_prototypes:
            -
              uuid: 636d751c8aa94a85aa2f19fb3395ae10
              expression: '(last(/AirFlow by HTTP/offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state])=00 or last(/AirFlow by HTTP/offset100-aiflow-DAG-dagRuns-[{#DAG_ID}-lastdagRun-state])=0) and last(/AirFlow by HTTP/offset100-aiflow-DAG-details-state-[{#DAG_ID}])=1'
              name: '[{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] Last dagRun fail'
              opdata: '{ITEM.LASTVALUE}'
              priority: WARNING
              description: |
                Indica que a última execução da DAG [{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}] houve falha.
                
                URL Airflow:
                https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/tree?dag_id={{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}
              tags:
                -
                  tag: airflow
                  value: 'Last dagRun fail'
                -
                  tag: DAG
                  value: '{{#DAG_ID}.regsub("\[\"(.*)\"\]", \1)}'
                -
                  tag: team
                  value: '{{#OWNER}.regsub("\[\"(.*)\"\]", \1)}'
          timeout: 5s
          url: '{$URL_DAGS_LIST}/dags'
          query_fields:
            -
              name: limit
              value: '300'
            -
              name: only_active
              value: 'false'
            -
              name: offset
              value: '100'
          headers:
            -
              name: Authorization
              value: 'Bearer {$TOKEN}'
          lld_macro_paths:
            -
              lld_macro: '{#DAG_ID}'
              path: $..dag_id
            -
              lld_macro: '{#FILE_TOKEN}'
              path: $..file_token
            -
              lld_macro: '{#OWNER}'
              path: '$..owners[0]'
            -
              lld_macro: '{#SCHEDULE}'
              path: $..schedule_interval.value
            -
              lld_macro: '{#TAG}'
              path: '$..tags[0].name'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.dags
      macros:
        -
          macro: '{$SCHEDULE_DAG}'
          value: '{{#SCHEDULE}.regsub("\[\"(.*)\"\]", \1)}'
        -
          macro: '{$URL_DAGS_LIST}'
          value: 'https://572fe053962e4854a3374571a338a08d-dot-southamerica-east1.composer.googleusercontent.com/api/v1'
          description: 'Endpoint [GET] para lista de DAGs ativos'
